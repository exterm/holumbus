{-# LANGUAGE OverloadedStrings #-}

{-

This is where all the routes and handlers are defined for our site. The
'site' function combines everything together and is exported by this module.

-}

module Site ( site ) 

where

import Control.Applicative
import Data.Maybe
import Data.Text as T
import Data.Text.Encoding as E
import Snap.Extension.Heist
import Snap.Util.FileServe
import Snap.Types
import Text.Templating.Heist
import Application

------------------------------------------------------------------------------

-- Renders the front page.
frontpage :: Application ()
frontpage = ifTop $ render "frontpage"

------------------------------------------------------------------------------

-- Searches the index and generates result html code
search :: String -> String
search s = s

-- Renders the answer page.
processquery :: Application ()
processquery = do
  query <- decodedParam "query"
  let oldquery = T.unpack (E.decodeUtf8 query)
  -- bindString "oldquery" (T.pack oldquery) $ 
  heistLocal (bindString "message" (T.pack (search oldquery))) $ render "frontpage"
  where
  decodedParam p = fromMaybe "" <$> getParam p

------------------------------------------------------------------------------

-- Defines routes through our site.
site :: Application ()
site = route [
               ("/",          frontpage),
               ("/querypage", processquery)
             ]
       <|> serveDirectory "resources/static"
