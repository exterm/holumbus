<?xml version="1.0" encoding="UTF-8"?>
<janus>

  <config/>

  <block>
  
    <block id="global_declarations">
      <!-- load handler creator -->
      <loadhandler reference="tcpHandler" object="tcpHandler" module="Network.Server.Janus.Handler.TCPHandler"/>
      <loadhandler reference="daemonHandler" object="daemonHandler" module="Network.Server.Janus.Core"/>
      <loadhandler reference="ttyHandler" object="ttyHandler" module="Network.Server.Janus.Handler.ConsoleHandler"/>

      <!-- basic shaders -->
      <loadshader reference="inline" object="dynShader" module="Network.Server.Janus.Core"/>
      <loadshader reference="local_echo" object="localEchoShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="request_shader" object="requestShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="file_shader" object="fileShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="cgi_shader" object="cgiShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="session_reader" object="sessionReadShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="session_writer" object="sessionWriteShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="mime_shader" object="mimeShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="http_status_shader" object="httpStatusShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="html_status_shader" object="htmlStatusShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="response_shader" object="responseShader" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="trace_shader" object="traceShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="trace_ta_shader" object="traceTAShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="reflect_servlet" object="reflectServlet" module="Network.Server.Janus.Shader.ServletShader"/>
      <loadshader reference="init_mime" object="initMimeDB" module="Network.Server.Janus.Shader.HTTPShader"/>
      <loadshader reference="auth" object="authShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="load" object="dataLoadShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="store" object="dataStoreShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="loadXml" object="loadXmlShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="storeXml" object="storeXmlShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="map" object="mappingShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="map_wrapper" object="mappingWrapper" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="alias" object="aliasShader" module="Network.Server.Janus.Shader.ShaderLib"/>
      <loadshader reference="setval" object="setValShader" module="Network.Server.Janus.Shader.ShaderLib"/>

      <!-- daemon shaders -->
      <loadshader reference="log_control_daemon" object="logControlDaemon" module="Network.Server.Janus.Shader.DaemonShader"/>

      <!-- predicate shaders -->
      <loadshader reference="false" object="falsePredicate" module="Network.Server.Janus.Shader.PredicateShader"/>
      <loadshader reference="valExists" object="taPredicate" module="Network.Server.Janus.Shader.PredicateShader"/>
      <loadshader reference="match" object="matchPredicate" module="Network.Server.Janus.Shader.PredicateShader"/>
      <loadshader reference="compare" object="comparePredicate" module="Network.Server.Janus.Shader.PredicateShader"/>
      <loadshader reference="neg" object="negPredicate" module="Network.Server.Janus.Shader.PredicateShader"/>

      <!-- expression shaders -->
      <loadshader reference="taExpr" object="taExpr" module="Network.Server.Janus.Shader.ExprShader"/>
      <loadshader reference="constExpr" object="constExpr" module="Network.Server.Janus.Shader.ExprShader"/>

      <!-- console shaders -->
      <loadshader reference="ttyTest" object="testShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyCmd" object="ttyCommandShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyConfig" object="ttyConfigShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyExecute" object="ttyExecuteShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyExit" object="ttyExitShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyFork" object="ttyForkShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyHelp" object="ttyHelpShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyList" object="ttyListShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyLoad" object="ttyLoadShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyStore" object="ttyStoreShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyShow" object="ttyShowShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttySwitch" object="ttySwitchShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyThread" object="ttyThreadShader" module="Network.Server.Janus.Shader.ConsoleShader"/>
      <loadshader reference="ttyVersion" object="ttyVersionShader" module="Network.Server.Janus.Shader.ConsoleShader"/>

      <loadshader reference="hayoo" object="hayooShader" module="Network.Server.Janus.Shader.Hayoo"/>

      <shader type="init_mime" typefile="./conf/mime.types"/>
      <shader type="loadXml" file="./conf/server.xml" node="/local/hummelbummel"/>
    </block>

    <handler id="console"><config><handler><config state="/local/console" id="console" type="ttyHandler"/></handler></config>
      <block>
        <shader type="ttyCmd" state="/local/console"/>
        <select>
          <value><shader type="taExpr" path="/transaction/console/@command"/></value>
          <case match="config"><shader type="ttyConfig" state="/local/console"/></case>
          <case match="execute"><shader type="ttyExecute" state="/local/console"/></case>
          <case match="exit"><shader type="ttyExit" state="/local/console"/></case>
          <case match="fork"><shader type="ttyFork" state="/local/console"/></case>
          <case match="help"><shader type="ttyHelp" state="/local/console"/></case>
          <case match="list"><shader type="ttyList" state="/local/console"/></case>
          <case match="load"><shader type="ttyLoad" state="/local/console"/></case>
          <case match="show"><shader type="ttyShow" state="/local/console"/></case>
          <case match="store"><shader type="ttyStore" state="/local/console"/></case>
          <case match="switch"><shader type="ttySwitch" state="/local/console"/></case>
          <case match="thread"><shader type="ttyThread" state="/local/console"/></case>
          <case match="version"><shader type="ttyVersion" state="/local/console"/></case>
          <case match="test1"><shader type="ttyTest" state="/local/test"/></case>
          <case match="test2"><shader type="ttyTest" state="/local/test"/></case>
          <default><shader type="ttyHelp" state="/local/console"/></default>
        </select>
      </block>
    </handler>

    <handler id="daemon"><config><handler><config id="daemon" type="daemonHandler"/></handler></config>
      <block>
        <shader id="log_control" type="log_control_daemon"/>
      </block>
    </handler>

    <handler id="tcp_80"><config><handler><config id="tcp_80" type="tcpHandler"> <port>8080</port> </config></handler></config> 
      <init>
        <shader type="loadXml" file="./conf/server.xml" node="/local/config/test"/>
      </init>
      <block>
        <shader id="request_shader" type="request_shader"/>
        <shader id="cgi_shader" type="cgi_shader"/>

        <like>
          <value><shader type="taExpr" path="/transaction/http/request/@uri_path"/></value>
      	  <case match="^/results/hayoo.html$" >
      	    <shader type="holumbus">
      	    	<config index="indexes/hayoo-index.bin" documents="indexes/hayoo-docs.bin"/>
      	    </shader>
      	  </case>
          <default>
            <shader id="file_shader" type="file_shader">
              <config base_url="/" maps_to="./wwwpages"/>
            </shader>
          </default>
        </like>

        <shader id="mime_shader" type="mime_shader">
          <config default="text/plain"><types xml="text/xml"/></config>
        </shader>
        <shader id="http_status_shader" accepts="[Processing, Failure]" type="http_status_shader"/>
        <shader id="html_status_shader" type="html_status_shader"><config page_404="./errorpages/404.html"/></shader>
        <shader id="response_shader" type="response_shader"/>
      </block>
    </handler>

  </block>

</janus>
